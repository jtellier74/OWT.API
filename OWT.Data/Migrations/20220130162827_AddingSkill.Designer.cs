// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OWT.Data;

namespace OWT.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220130162827_AddingSkill")]
    partial class AddingSkill
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OWT.Data.EntityModels.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "13 rue des pinsons",
                            Email = "julien.tellier74@mail.com",
                            FirstName = "Julien",
                            FullName = "JulienTellier",
                            LastName = "Tellier",
                            Phone = "0672222667"
                        },
                        new
                        {
                            Id = 2,
                            Address = "13 rue des lilas",
                            Email = "Alfred.tellier74@mail.com",
                            FirstName = "Alfred",
                            FullName = "AlfredTellier",
                            LastName = "Tellier",
                            Phone = "0672222668"
                        },
                        new
                        {
                            Id = 3,
                            Address = "13 rue du stade",
                            Email = "Jean.tellier74@mail.com",
                            FirstName = "Jean",
                            FullName = "JeanTellier",
                            LastName = "Tellier",
                            Phone = "0672222669"
                        });
                });

            modelBuilder.Entity("OWT.Data.EntityModels.ContactSkill", b =>
                {
                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.HasKey("SkillId", "ContactId");

                    b.HasIndex("ContactId");

                    b.ToTable("ContactSkill");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            ContactId = 1
                        },
                        new
                        {
                            SkillId = 1,
                            ContactId = 3
                        },
                        new
                        {
                            SkillId = 1,
                            ContactId = 2
                        });
                });

            modelBuilder.Entity("OWT.Data.EntityModels.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skill");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Level = "senior",
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Level = "junior",
                            Name = "C#"
                        },
                        new
                        {
                            Id = 3,
                            Level = "intermediate",
                            Name = "C#"
                        });
                });

            modelBuilder.Entity("OWT.Data.EntityModels.ContactSkill", b =>
                {
                    b.HasOne("OWT.Data.EntityModels.Contact", "Contact")
                        .WithMany("ContactSkill")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OWT.Data.EntityModels.Skill", "Skill")
                        .WithMany("ContactSkill")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("OWT.Data.EntityModels.Contact", b =>
                {
                    b.Navigation("ContactSkill");
                });

            modelBuilder.Entity("OWT.Data.EntityModels.Skill", b =>
                {
                    b.Navigation("ContactSkill");
                });
#pragma warning restore 612, 618
        }
    }
}
